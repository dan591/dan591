classdef Project_Mangement < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                 matlab.ui.Figure
        UITable                  matlab.ui.control.Table
        Panel                    matlab.ui.container.Panel
        Panel_2                  matlab.ui.container.Panel
        DeleteRowButton          matlab.ui.control.Button
        RowLabel                 matlab.ui.control.Label
        RowEditField_2           matlab.ui.control.NumericEditField
        Panel_3                  matlab.ui.container.Panel
        NoEditFieldLabel         matlab.ui.control.Label
        NoEditField              matlab.ui.control.NumericEditField
        ActivityLabel            matlab.ui.control.Label
        ActivityEditField_2      matlab.ui.control.EditField
        PredecesssorLabel        matlab.ui.control.Label
        PredecesssorEditField    matlab.ui.control.EditField
        SuccessorEditFieldLabel  matlab.ui.control.Label
        SuccessorEditField       matlab.ui.control.EditField
        DurationEditFieldLabel   matlab.ui.control.Label
        DurationEditField        matlab.ui.control.NumericEditField
        ESTEditFieldLabel        matlab.ui.control.Label
        ESTEditField             matlab.ui.control.NumericEditField
        EFTEditFieldLabel        matlab.ui.control.Label
        EFTEditField             matlab.ui.control.NumericEditField
        LSTEditFieldLabel        matlab.ui.control.Label
        LSTEditField             matlab.ui.control.NumericEditField
        LFTEditFieldLabel        matlab.ui.control.Label
        LFTEditField             matlab.ui.control.NumericEditField
        SLACKEditFieldLabel      matlab.ui.control.Label
        SLACKEditField           matlab.ui.control.NumericEditField
        DATAENTRYPanel           matlab.ui.container.Panel
        NewRowDataButton         matlab.ui.control.Button
        Panel_4                  matlab.ui.container.Panel
        RowEditField_3Label      matlab.ui.control.Label
        RowEditField_3           matlab.ui.control.NumericEditField
        ColumnEditField_2Label   matlab.ui.control.Label
        ColumnEditField_2        matlab.ui.control.NumericEditField
        ChangeanumberButton      matlab.ui.control.Button
        Panel_5                  matlab.ui.container.Panel
        NumberEditFieldLabel     matlab.ui.control.Label
        NumberEditField          matlab.ui.control.NumericEditField
        TextEditFieldLabel       matlab.ui.control.Label
        TextEditField            matlab.ui.control.EditField
        ChangealetterButton      matlab.ui.control.Button
        RowEditField_4Label      matlab.ui.control.Label
        RowEditField_4           matlab.ui.control.NumericEditField
        ColumnEditField_3Label   matlab.ui.control.Label
        ColumnEditField_3        matlab.ui.control.NumericEditField
        Panel_6                  matlab.ui.container.Panel
        ComputeButton            matlab.ui.control.Button
    end

    
    properties (Access = private)
        t; % Table to sjare between callbacks
    end
    
    properties
        In % Description
        maxi
        maxnum
        thynum
        lengthmeasure
        storelen
        mydatvar
        mysplit
        duravalue
        estvalue
        lstvalue
        num
        act 
        pred
        succ 
        dura
        est
        eft
        lst
        lft
        slack
        slacklist
        thyslack
        theslack
        
        %% %% %%
        op
        xeft
        mylists
        min1
        mydiff
        maxeft
        lftlist
        lengthmeasure1
        storelen1
        mydatvar1
        mysplit1
        duravalue1
        eftvalue1
        lftvalue1
        num1
        act1 
        pred1
        succ1 
        dura1
        est1
        eft1
        lst1
        lft1
        xcel
        rann
        ge
        range
    end
    

    % Callbacks that handle component events
    methods (Access = private)

        % Button pushed function: NewRowDataButton
        function NewRowDataButtonPushed(app, event)
            app.t = app.UITable.Data;
            app.num = app.NoEditField.Value;
            app.act = app.ActivityEditField_2.Value;
            app.pred = app.PredecesssorEditField.Value;
            app.succ = app.SuccessorEditField.Value;
            app.dura = app.DurationEditField.Value;
            app.est = app.ESTEditField.Value;
            app.eft = app.EFTEditField.Value;
            app.lst = app.LSTEditField.Value;
            app.lft = app.LFTEditField.Value;
            app.slack = app.SLACKEditField.Value;
            
            rows = {app.num app.act app.pred app.succ app.dura ...
                app.est app.eft app.lst app.lft app.slack};
            app.UITable.Data = [app.t;rows];
            app.t = app.UITable.Data;
            
        end

        % Callback function
        function DeleteaDataButtonPushed(app, event)
            app.t = app.UITable.Data;
            rowdel = app.RowEditField.Value;
            coldel = app.ColumnEditField.Value;
            app.UITable.Data(rowdel,coldel) = [];
            app.num = app.num-1;
            app.t = app.UITable.Data;
        end

        % Button pushed function: DeleteRowButton
        function DeleteRowButtonPushed(app, event)
            app.t = app.UITable.Data;
            rn = app.RowEditField_2.Value;
            app.UITable.Data(rn,:) = [];
            app.num = app.num-1;
            app.t = app.UITable.Data;
        end

        % Button pushed function: ChangeanumberButton
        function ChangeanumberButtonPushed(app, event)
            app.t = app.UITable.Data;
            rowaddnum = app.RowEditField_3.Value;
            coladdnum = app.ColumnEditField_2.Value;
            lett = num2cell(app.NumberEditField.Value);
            app.UITable.Data(rowaddnum,coladdnum) =  lett;
            app.t = app.UITable.Data;
        end

        % Button pushed function: ChangealetterButton
        function ChangealetterButtonPushed(app, event)
            app.t = app.UITable.Data;
            rowaddtext = app.RowEditField_4.Value;
            coladdtext = app.ColumnEditField_3.Value;
            let = cellstr(app.TextEditField.Value);
            app.UITable.Data(rowaddtext,coladdtext) = let;
            app.t = app.UITable.Data;
        end

        % Button pushed function: ComputeButton
        function ComputeButtonPushed(app, event)
            
            
            app.t = app.UITable.Data;
            
            disp("Hello Dear! You are welcome to my scheduling program")
            disp("in Project Management")
            fprintf("\n")
            disp("I understand by now you have filled all the necessary data")
            disp("from columns (1 to 5) with all accuracy and you are seeking my")
            disp("assistance to complete the rest.")
            fprintf("\n")
            disp("If that is the case, then I am more than happy to help!")
            fprintf("\n")
            disp("With all diligence, strictly follow the instruction when")
            disp("I prompt you for a data.")
            fprintf("\n\n")
            
            disp("Surprisingly, this program can take an infinite number of events provided")
            disp("you follow this simple rule when entering the data for predecessor and successor")
            disp("1. ALWAYS SEPARATE ONE EVENT FROM THE OTHER WITH A COMMA (,)")
            disp("WHEN COMBINED LETTERS [e.g: 'AB' which denotes one activity] IS THE ONLY ACTIVITY NEEDED IN A CELL ")
            disp("BRING A COMMA (,) BEFORE ENTERING THAT EVENT [e.g: ',AB']")
            disp("You can restart me and give this a try")
            fprintf("\n\n")
            
            fprintf("If you are OK reading the above statements, you can choose to close this program ... " + ...
                "and consider the combination of the letters [e.g: ',AA'] or \n")
            app.op = input("just enter 1 to continue: ");
            if app.op == 1
                fprintf("\n")
                disp("Great!, let's begin")
                fprintf("\n\n")
            else    
                while app.op~=1
                app.op = input("Please take time to read the above statements, then enter 1 to continue: ");
                    if app.op == 1
                        fprintf("\n")
                        disp("Great!, let's begin")
                        fprintf("\n\n")
                    end
                end
            end
            
            app.thynum = {app.UITable.Data(1,end)};
            if isequal(app.thynum,[])
                app.num = app.thynum(end-1);
            end
            
            for i = 1:app.num
                app.mydatvar = app.UITable.Data(i,3);%a variable to hold data in a UITable
                app.mysplit = split(app.mydatvar,",");% spliting data to get required length
                app.lengthmeasure = length(app.mysplit);% stores the length of split data
                app.duravalue = app.UITable.Data(i,5);% holds the duration value
                app.estvalue = app.UITable.Data(i,6);% holds the est value
                app.storelen = length(app.mydatvar);
                %app.mydatvar{:}+1 This is a secret code
                
                if app.lengthmeasure > 1% if split obj is more than one
                    if app.lengthmeasure == 2
                        fprintf(1,"We are seeing these event(s) [%s,%s] here", app.mysplit{:})
                    elseif app.lengthmeasure == 3
                        fprintf(1,"We are seeing these events [%s,%s,%s] here", app.mysplit{:})
                    elseif app.lengthmeasure == 4
                        fprintf(1,"We are seeing these events [%s,%s,%s,%s] here", app.mysplit{:})
                    elseif app.lengthmeasure == 5
                        fprintf(1,"We are seeing these events [%s,%s,%s,%s,%s] here", app.mysplit{:})
                    elseif app.lengthmeasure == 6
                        fprintf(1,"We are seeing these events [%s,%s,%s,%s,%s,%s] here", app.mysplit{:})
                    end
                    fprintf(1, "\n")
                    app.maxi = {input("Enter the EFT value of each of the above events e.g[1,2,3]: ")};
                    fprintf("\n")
                    app.estvalue = {max([app.maxi{:}])};
                    app.UITable.Data(i,6) = app.estvalue;%for the cell to store the est value
                    app.UITable.Data(i,7) = {sum([app.duravalue{:}]+[app.estvalue{:}])};
                elseif app.lengthmeasure == 1 && ~isequal(app.mydatvar{:}+1,[])
                    fprintf(1,"We are seeing event %s here", app.mysplit{:})
                    fprintf(1, "\n")
                    app.estvalue = {input("Enter it's EFT value: ")};
                    fprintf("\n")
                    app.UITable.Data(i,6) = app.estvalue;
                    app.UITable.Data(i,7) = {sum([app.duravalue{:}]+[app.estvalue{:}])};
                elseif isequal(app.mydatvar{:}+1,[]) % To make sure it was empty  
                    app.lengthmeasure = app.storelen - 1;
                    if app.lengthmeasure == 0
                        app.estvalue = {0};% est is given 0 cell object
                        app.UITable.Data(i,7) = {sum([app.duravalue{:}]+[app.estvalue{:}])};% sum dura&es
                    end
                end
                app.t = app.UITable.Data;
            end
            
            app.maxnum = {};
            for j = 1:app.num % finding the maximum EFT value
                app.mylists{j} = {app.UITable.Data(j,7)};
                app.maxnum(end + 1) = {app.mylists{j}{1}{1}};
            end
            app.maxnum;
            app.maxeft = {max([app.maxnum{:}])};
            
            %% %% %%
            
            for i = app.num:-1:1
                app.mydatvar1 = app.UITable.Data(i,4);%a variable to hold data in a UITable
                app.mysplit1 = split(app.mydatvar1,",");% spliting data to get required length
                app.lengthmeasure1 = length(app.mysplit1);% stores the length of split data
                app.duravalue1 = app.UITable.Data(i,5);% holds the duration value
                app.lftvalue1 = app.UITable.Data(i,8);% holds the est value
                app.storelen1 = length(app.mydatvar1);
                %app.mydatvar{:}+1 This is a secret code - for logical
                
                if app.lengthmeasure1 > 1% if split obj is more than one
                    if app.lengthmeasure1 == 2
                        fprintf(1,"We are seeing these event(s) [%s,%s] here", app.mysplit1{:})
                    elseif app.lengthmeasure1 == 3
                        fprintf(1,"We are seeing these events [%s,%s,%s] here", app.mysplit1{:})
                    elseif app.lengthmeasure1 == 4
                        fprintf(1,"We are seeing these events [%s,%s,%s,%s] here", app.mysplit1{:})
                    elseif app.lengthmeasure1 == 5
                        fprintf(1,"We are seeing these events [%s,%s,%s,%s,%s] here", app.mysplit1{:})
                    elseif app.lengthmeasure1 == 6
                        fprintf(1,"We are seeing these events [%s,%s,%s,%s,%s,%s] here", app.mysplit1{:})
                    end
                    fprintf(1, "\n")
                    app.min1 = {input("Enter the LST values of each of the above events e.g[1,2,3]: ")};
                    fprintf("\n")
                    app.lftvalue1 = {min([app.min1{:}])};
                    app.UITable.Data(i,8) = app.lftvalue1;%for the cell to store the est value
                    app.UITable.Data(i,9) = {sum([app.lftvalue1{:}]-[app.duravalue1{:}])};
                elseif app.lengthmeasure1 == 1 && ~isequal(app.mydatvar1{:}+1,[])
                    fprintf(1,"We are seeing event %s here", app.mysplit1{:})
                    fprintf(1, "\n")
                    app.lftvalue1 = {input("Enter it's LST value: ")};
                    fprintf("\n")
                    app.UITable.Data(i,8) = app.lftvalue1;
                    app.UITable.Data(i,9) = {sum([app.lftvalue1{:}]-[app.duravalue1{:}])};
                elseif isequal(app.mydatvar1{:}+1,[]) % To make sure it was empty  
                    app.lengthmeasure1 = app.storelen1 - 1;
                    if app.lengthmeasure1 == 0
                        app.lftvalue1 = app.maxeft;% lft is given max eft
                        app.UITable.Data(i,8) = app.lftvalue1;
                        app.UITable.Data(i,9) = {sum([app.lftvalue1{:}]-[app.duravalue1{:}])};% sum dura&es
                    end
                end
                app.t = app.UITable.Data;
            end
            
            app.lftlist = {};
            app.lstvalue = {};
            for i = 1:app.num
                app.mylists{i} = {app.UITable.Data(i,7)};
                app.lstvalue(end + 1) = {app.mylists{i}{1}{1}};%holding lst value for Slack
                app.lftvalue1{i} = {app.UITable.Data(i,8)};
                app.lftlist(end + 1) = {app.lftvalue1{i}{1}{1}};
                %app.absol = {abs(sum([app.lftlist{i}]-[app.lstvalue{i}]))};
                app.UITable.Data(i,10) = {abs(sum([app.lftlist{i}]-[app.lstvalue{i}]))};
             end
                
             
             app.maxnum = {};
            for j = 1:app.num % finding the maximum EFT value
                app.mylists{j} = {app.UITable.Data(j,7)};
                app.maxnum(end + 1) = {app.mylists{j}{1}{1}};
            end
            app.maxnum;
            app.maxeft = {max([app.maxnum{:}])};
             
            
             app.theslack = {};
             app.slacklist = {};
             for i = 1:app.num
                 app.thyslack{i} = {app.UITable.Data(i,2)};
                 app.theslack(end + 1) = {app.thyslack{i}{1}{1}};
                 if isequal(app.UITable.Data(i,10),{0})
                     app.slacklist(end + 1) = app.theslack(i);
                 end
             end
            
            fprintf("\n\n")
            disp("These are the events with zero slack.")
            disp("In other words, the events below cannot be dalayed.")
            app.slacklist
             
            fprintf("\n\n")
            disp("Alright! I am successfully done with your request.")
            fprintf("\n\n")
            disp("You can now check back to find out the updates in the table.")
            fprintf("\n\n")
            disp("Now, I will be transfering your data to Excel for a Gantt Chart.")
            fprintf("\n\n")
            
            app.xcel = app.UITable.Data;
            winopen("XCELLIN.xlsm")%open the excel file
            
            disp("Please, for the popped Excel sheet, clear any data on it using the clear data button, save it and close it.")
            disp("It will be opened once it receives all the data.")
            disp("Please note, refusing to clear the data before closing might result in inaccuracy or malfunction.")
            fprintf("\n\n")
            app.op = input("if the sheet was cleared/emptied before closing it, enter 1 here to continue: ");
            if app.op == 1
                fprintf("\n")
                disp("Great!, I have assumed the sheet is empty now.")
                disp("I am done loading it with the required data.")
                fprintf("\n\n")
            else    
                while app.op~=1
                app.op = input("Please clear the data in the excel sheet, then enter 1 to continue: ");
                    if app.op == 1
                        fprintf("\n")
                        disp("Great!, let's begin.")
                        fprintf("\n\n")
                    end
                end
            end
            app.rann = "A1:J";
            app.ge = string(app.num);
            app.range = strcat(app.rann,app.ge);
            xlswrite("XCELLIN.xlsm",app.xcel,"Sheet1",app.range)
            winopen("XCELLIN.xlsm")
            disp("Please continue the rest of the process using the Excel file I just opened.")
            app.t = app.UITable.Data;
        end

        % Callback function
        function PlotGanttChartButtonPushed(app, event)
            
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Position = [100 100 726 553];
            app.UIFigure.Name = 'MATLAB App';

            % Create UITable
            app.UITable = uitable(app.UIFigure);
            app.UITable.ColumnName = {'1.No.'; '2.Activity'; '3.Predecessor'; '4.Successor'; '5.Duration'; '6.EST'; '7.EFT'; '8.LFT'; '9.LST'; '10.SLACK'};
            app.UITable.RowName = {};
            app.UITable.Position = [3 238 636 274];

            % Create Panel
            app.Panel = uipanel(app.UIFigure);
            app.Panel.BackgroundColor = [0.2392 0.5098 0.7412];
            app.Panel.Position = [295 45 111 75];

            % Create Panel_2
            app.Panel_2 = uipanel(app.Panel);
            app.Panel_2.BackgroundColor = [0.8 0.8 0.8];
            app.Panel_2.Position = [5 5 100 65];

            % Create DeleteRowButton
            app.DeleteRowButton = uibutton(app.Panel_2, 'push');
            app.DeleteRowButton.ButtonPushedFcn = createCallbackFcn(app, @DeleteRowButtonPushed, true);
            app.DeleteRowButton.Position = [6 33 78 25];
            app.DeleteRowButton.Text = 'Delete Row';

            % Create RowLabel
            app.RowLabel = uilabel(app.Panel_2);
            app.RowLabel.HorizontalAlignment = 'right';
            app.RowLabel.Position = [10 4 36 22];
            app.RowLabel.Text = 'Row: ';

            % Create RowEditField_2
            app.RowEditField_2 = uieditfield(app.Panel_2, 'numeric');
            app.RowEditField_2.Position = [45 4 39 22];

            % Create Panel_3
            app.Panel_3 = uipanel(app.UIFigure);
            app.Panel_3.TitlePosition = 'centertop';
            app.Panel_3.BackgroundColor = [0.8 0.8 0.8];
            app.Panel_3.FontName = 'Times New Roman';
            app.Panel_3.FontSize = 16;
            app.Panel_3.Position = [3 26 280 213];

            % Create NoEditFieldLabel
            app.NoEditFieldLabel = uilabel(app.Panel_3);
            app.NoEditFieldLabel.HorizontalAlignment = 'right';
            app.NoEditFieldLabel.Position = [8 153 25 22];
            app.NoEditFieldLabel.Text = 'No:';

            % Create NoEditField
            app.NoEditField = uieditfield(app.Panel_3, 'numeric');
            app.NoEditField.Position = [37 153 31 22];

            % Create ActivityLabel
            app.ActivityLabel = uilabel(app.Panel_3);
            app.ActivityLabel.HorizontalAlignment = 'right';
            app.ActivityLabel.Position = [8 120 47 22];
            app.ActivityLabel.Text = 'Activity:';

            % Create ActivityEditField_2
            app.ActivityEditField_2 = uieditfield(app.Panel_3, 'text');
            app.ActivityEditField_2.Position = [61 120 70 22];

            % Create PredecesssorLabel
            app.PredecesssorLabel = uilabel(app.Panel_3);
            app.PredecesssorLabel.HorizontalAlignment = 'right';
            app.PredecesssorLabel.Position = [8 89 82 22];
            app.PredecesssorLabel.Text = 'Predecesssor:';

            % Create PredecesssorEditField
            app.PredecesssorEditField = uieditfield(app.Panel_3, 'text');
            app.PredecesssorEditField.Position = [105 89 72 22];

            % Create SuccessorEditFieldLabel
            app.SuccessorEditFieldLabel = uilabel(app.Panel_3);
            app.SuccessorEditFieldLabel.HorizontalAlignment = 'right';
            app.SuccessorEditFieldLabel.Position = [8 57 65 22];
            app.SuccessorEditFieldLabel.Text = 'Successor:';

            % Create SuccessorEditField
            app.SuccessorEditField = uieditfield(app.Panel_3, 'text');
            app.SuccessorEditField.Position = [88 57 72 22];

            % Create DurationEditFieldLabel
            app.DurationEditFieldLabel = uilabel(app.Panel_3);
            app.DurationEditFieldLabel.HorizontalAlignment = 'right';
            app.DurationEditFieldLabel.Position = [11 27 51 22];
            app.DurationEditFieldLabel.Text = 'Duration';

            % Create DurationEditField
            app.DurationEditField = uieditfield(app.Panel_3, 'numeric');
            app.DurationEditField.Position = [77 27 38 22];

            % Create ESTEditFieldLabel
            app.ESTEditFieldLabel = uilabel(app.Panel_3);
            app.ESTEditFieldLabel.HorizontalAlignment = 'right';
            app.ESTEditFieldLabel.Position = [190 153 29 22];
            app.ESTEditFieldLabel.Text = 'EST';

            % Create ESTEditField
            app.ESTEditField = uieditfield(app.Panel_3, 'numeric');
            app.ESTEditField.Position = [234 153 38 22];

            % Create EFTEditFieldLabel
            app.EFTEditFieldLabel = uilabel(app.Panel_3);
            app.EFTEditFieldLabel.HorizontalAlignment = 'right';
            app.EFTEditFieldLabel.Position = [192 124 28 22];
            app.EFTEditFieldLabel.Text = 'EFT';

            % Create EFTEditField
            app.EFTEditField = uieditfield(app.Panel_3, 'numeric');
            app.EFTEditField.Position = [233 124 38 22];

            % Create LSTEditFieldLabel
            app.LSTEditFieldLabel = uilabel(app.Panel_3);
            app.LSTEditFieldLabel.HorizontalAlignment = 'right';
            app.LSTEditFieldLabel.Position = [191 93 28 22];
            app.LSTEditFieldLabel.Text = 'LST';

            % Create LSTEditField
            app.LSTEditField = uieditfield(app.Panel_3, 'numeric');
            app.LSTEditField.Position = [234 93 38 22];

            % Create LFTEditFieldLabel
            app.LFTEditFieldLabel = uilabel(app.Panel_3);
            app.LFTEditFieldLabel.HorizontalAlignment = 'right';
            app.LFTEditFieldLabel.Position = [192 61 27 22];
            app.LFTEditFieldLabel.Text = 'LFT';

            % Create LFTEditField
            app.LFTEditField = uieditfield(app.Panel_3, 'numeric');
            app.LFTEditField.Position = [234 61 38 22];

            % Create SLACKEditFieldLabel
            app.SLACKEditFieldLabel = uilabel(app.Panel_3);
            app.SLACKEditFieldLabel.HorizontalAlignment = 'right';
            app.SLACKEditFieldLabel.Position = [174 31 45 22];
            app.SLACKEditFieldLabel.Text = 'SLACK';

            % Create SLACKEditField
            app.SLACKEditField = uieditfield(app.Panel_3, 'numeric');
            app.SLACKEditField.Position = [233 31 38 22];

            % Create DATAENTRYPanel
            app.DATAENTRYPanel = uipanel(app.Panel_3);
            app.DATAENTRYPanel.TitlePosition = 'centertop';
            app.DATAENTRYPanel.Title = 'DATA ENTRY';
            app.DATAENTRYPanel.BackgroundColor = [0.651 0.651 0.651];
            app.DATAENTRYPanel.FontSize = 16;
            app.DATAENTRYPanel.Position = [78 182 123 30];

            % Create NewRowDataButton
            app.NewRowDataButton = uibutton(app.Panel_3, 'push');
            app.NewRowDataButton.ButtonPushedFcn = createCallbackFcn(app, @NewRowDataButtonPushed, true);
            app.NewRowDataButton.BackgroundColor = [0.6824 0.7843 0.8314];
            app.NewRowDataButton.Position = [114 1 100 22];
            app.NewRowDataButton.Text = 'New Row Data';

            % Create Panel_4
            app.Panel_4 = uipanel(app.UIFigure);
            app.Panel_4.BackgroundColor = [0.2392 0.5098 0.7412];
            app.Panel_4.Position = [295 136 219 99];

            % Create RowEditField_3Label
            app.RowEditField_3Label = uilabel(app.Panel_4);
            app.RowEditField_3Label.HorizontalAlignment = 'right';
            app.RowEditField_3Label.Position = [18 50 30 22];
            app.RowEditField_3Label.Text = 'Row';

            % Create RowEditField_3
            app.RowEditField_3 = uieditfield(app.Panel_4, 'numeric');
            app.RowEditField_3.Position = [63 50 37 22];

            % Create ColumnEditField_2Label
            app.ColumnEditField_2Label = uilabel(app.Panel_4);
            app.ColumnEditField_2Label.HorizontalAlignment = 'right';
            app.ColumnEditField_2Label.Position = [9 29 47 22];
            app.ColumnEditField_2Label.Text = 'Column';

            % Create ColumnEditField_2
            app.ColumnEditField_2 = uieditfield(app.Panel_4, 'numeric');
            app.ColumnEditField_2.Position = [63 29 37 22];

            % Create ChangeanumberButton
            app.ChangeanumberButton = uibutton(app.Panel_4, 'push');
            app.ChangeanumberButton.ButtonPushedFcn = createCallbackFcn(app, @ChangeanumberButtonPushed, true);
            app.ChangeanumberButton.Position = [5 71 112 22];
            app.ChangeanumberButton.Text = 'Change a number';

            % Create Panel_5
            app.Panel_5 = uipanel(app.Panel_4);
            app.Panel_5.Position = [0 -2 219 30];

            % Create NumberEditFieldLabel
            app.NumberEditFieldLabel = uilabel(app.Panel_5);
            app.NumberEditFieldLabel.HorizontalAlignment = 'right';
            app.NumberEditFieldLabel.Position = [-3 4 48 22];
            app.NumberEditFieldLabel.Text = 'Number';

            % Create NumberEditField
            app.NumberEditField = uieditfield(app.Panel_5, 'numeric');
            app.NumberEditField.Position = [49 4 42 22];

            % Create TextEditFieldLabel
            app.TextEditFieldLabel = uilabel(app.Panel_5);
            app.TextEditFieldLabel.HorizontalAlignment = 'right';
            app.TextEditFieldLabel.Position = [114 4 28 22];
            app.TextEditFieldLabel.Text = 'Text';

            % Create TextEditField
            app.TextEditField = uieditfield(app.Panel_5, 'text');
            app.TextEditField.Position = [157 4 40 22];

            % Create ChangealetterButton
            app.ChangealetterButton = uibutton(app.Panel_4, 'push');
            app.ChangealetterButton.ButtonPushedFcn = createCallbackFcn(app, @ChangealetterButtonPushed, true);
            app.ChangealetterButton.Position = [119 71 100 22];
            app.ChangealetterButton.Text = 'Change a letter';

            % Create RowEditField_4Label
            app.RowEditField_4Label = uilabel(app.Panel_4);
            app.RowEditField_4Label.HorizontalAlignment = 'right';
            app.RowEditField_4Label.Position = [121 50 30 22];
            app.RowEditField_4Label.Text = 'Row';

            % Create RowEditField_4
            app.RowEditField_4 = uieditfield(app.Panel_4, 'numeric');
            app.RowEditField_4.Position = [166 50 37 22];

            % Create ColumnEditField_3Label
            app.ColumnEditField_3Label = uilabel(app.Panel_4);
            app.ColumnEditField_3Label.HorizontalAlignment = 'right';
            app.ColumnEditField_3Label.Position = [112 31 47 22];
            app.ColumnEditField_3Label.Text = 'Column';

            % Create ColumnEditField_3
            app.ColumnEditField_3 = uieditfield(app.Panel_4, 'numeric');
            app.ColumnEditField_3.Position = [166 31 37 22];

            % Create Panel_6
            app.Panel_6 = uipanel(app.UIFigure);
            app.Panel_6.BackgroundColor = [0.2706 0.5451 0.6588];
            app.Panel_6.Position = [416 78 108 41];

            % Create ComputeButton
            app.ComputeButton = uibutton(app.Panel_6, 'push');
            app.ComputeButton.ButtonPushedFcn = createCallbackFcn(app, @ComputeButtonPushed, true);
            app.ComputeButton.Position = [3 10 100 22];
            app.ComputeButton.Text = 'Compute';

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = Project_Mangement

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end
